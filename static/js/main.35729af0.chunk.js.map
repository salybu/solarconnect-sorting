{"version":3,"sources":["utils/sorting.js","components/Timer/Timer.js","pages/Home/Home.js","App.js","styles/GlobalStyles.js","index.js"],"names":["sort","arr","left","right","compareFn","pivot","i","j","result","isNaN","StyledTimer","styled","div","Timer","locale","useState","time","setTime","date","setDate","useEffect","clock","Date","options","weekday","year","month","day","timeZoneName","timeZone","nyTime","nyDate","toLocaleDateString","unixTime","getTime","includes","console","log","hours","getHours","minutes","getMinutes","seconds","getSeconds","harold","standIn","setInterval","clearInterval","sortTypeToMethod","bubble","array","isAscending","length","swap","select","Index","answer","insert","insertValue","quick","Array","isArray","TypeError","compareFnType","a","b","SortingMachineBox","InputField","ResultField","SelectField","btnAnimation1","keyframes","btnAnimation2","btnAnimation3","btnAnimation4","StartButton","button","Home","inputNumbers","setInputNumbers","type","resultAsc","resultDesc","sortInfo","setSortInfo","calculating","setCalculating","getSortResult","isAsc","input","data","split","map","elem","parseInt","sortMethod","toString","replaceAll","timer","setTimeout","clearTimeout","onSubmit","e","preventDefault","slice","name","value","required","autoComplete","onChange","target","match","join","htmlFor","style","display","justifyContent","alignItems","disabled","App","GlobalStyles","createGlobalStyle","reset","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.35729af0.chunk.js","sourcesContent":["/**\r\n * @param {*} array : input 배열\r\n * @param {*} isAscending : 정렬 순서 조건. true면 오름차면, false면 내림차순.\r\n * @returns : 정렬된 배열\r\n */\r\nfunction bubbleSort(array, isAscending) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    let swap = false;\r\n    for (let j = 0; j < array.length - i; j++) {\r\n      const sortingCondition = isAscending ? array[j] > array[j + 1] : array[j] < array[j + 1];\r\n\r\n      if (sortingCondition) {\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n        swap = true;\r\n      }\r\n    }\r\n    if (swap == false) {\r\n      break;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * @param {*} array : input 배열\r\n * @param {*} isAscending : 정렬 순서 조건. true면 오름차면, false면 내림차순.\r\n * @returns : 정렬된 배열\r\n */\r\nfunction selectionSort(arr, isAscending) {\r\n  let Index;\r\n  let answer = arr;\r\n\r\n  // 제일 마지막 인덱스가 Index가 될 때는 더이상 비교할 요소들이 없기이 반복 조건을 배열 길이 - 1로 세팅.\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    Index = i;\r\n\r\n    for (let j = i + 1; j < arr.length; j++) {\r\n      const sortingCondition = isAscending ? arr[Index] > arr[j] : arr[Index] < arr[j];\r\n      if (sortingCondition) {\r\n        Index = j;\r\n      }\r\n    }\r\n    // console.log(`maxNumIndex : ${maxNumIndex}`);\r\n    // 순회를 시작하는 인덱스의 값이 최소값이 아닌 경우, 그러니까 실제로 스왑이 필요한 경우에만 스왑 실행\r\n    if (Index > i) {\r\n      [arr[i], arr[Index]] = [arr[Index], arr[i]];\r\n    }\r\n\r\n    // console.log(arr);\r\n  }\r\n\r\n  return answer;\r\n}\r\n\r\n/**\r\n * @param {*} array : input 배열\r\n * @param {*} isAscending : 정렬 순서 조건. true면 오름차면, false면 내림차순.\r\n * @returns : 정렬된 배열\r\n */\r\nfunction insertionSort(array, isAscending) {\r\n  let answer = array;\r\n\r\n  for (let i = 1; i < array.length; i++) {\r\n    let insertValue = array[i];\r\n\r\n    for (let j = i - 1; j > -1; j--) {\r\n      // 내림차순으로 변경시 아래 조건문 부등호만 바꾸면 된다.\r\n      const sortingCondition = isAscending ? insertValue < array[j] : insertValue > array[j];\r\n\r\n      if (sortingCondition) {\r\n        array[j + 1] = array[j];\r\n      } else {\r\n        array[j + 1] = insertValue;\r\n        break;\r\n      }\r\n\r\n      // 첫번째 인덱스까지 비교했는데도 삽입할 곳이 없다면 첫번째 인덱스 값을 insertValue로 대체\r\n      if (j === 0) {\r\n        array[j] = insertValue;\r\n      }\r\n      // console.log(arr);\r\n    }\r\n\r\n    // console.log(array);\r\n    // console.log(`패스스루 : ${i} 번째`);\r\n  }\r\n\r\n  return answer;\r\n}\r\n\r\nfunction quickSort(arr, compareFn) {\r\n  if (!Array.isArray(arr)) {\r\n    throw TypeError('The first parameter must be an array');\r\n  }\r\n\r\n  const compareFnType = typeof compareFn;\r\n\r\n  if (compareFnType !== 'function' && compareFnType !== 'undefined') {\r\n    throw TypeError('The comparison function must be either a function or undefined');\r\n  }\r\n\r\n  if (compareFnType === 'undefined') {\r\n    compareFn = (a, b) => {\r\n      if (a < b) return -1;\r\n      if (a === b) return 0;\r\n      if (a > b) return 1;\r\n    };\r\n  }\r\n\r\n  if (arr.length < 2) return;\r\n\r\n  sort(arr, 0, arr.length - 1, compareFn);\r\n}\r\n\r\nfunction sort(arr, left, right, compareFn) {\r\n  if (left >= right) return;\r\n\r\n  const pivot = left;\r\n  let i = pivot + 1;\r\n  let j = right;\r\n\r\n  while (i <= j) {\r\n    while (i <= right) {\r\n      const result = compareFn(arr[i], arr[pivot]);\r\n\r\n      if (isNaN(result) || typeof result !== 'number') return;\r\n      if (result > 0) break;\r\n\r\n      i++;\r\n    }\r\n\r\n    while (j > left) {\r\n      const result = compareFn(arr[j], arr[pivot]);\r\n\r\n      if (isNaN(result) || typeof result !== 'number') return;\r\n      if (result <= 0) break;\r\n\r\n      j--;\r\n    }\r\n\r\n    if (i >= j) break;\r\n\r\n    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n  }\r\n\r\n  [arr[j], arr[pivot]] = [arr[pivot], arr[j]];\r\n\r\n  sort(arr, left, j - 1, compareFn);\r\n  sort(arr, j + 1, right, compareFn);\r\n}\r\n\r\nexport { bubbleSort, insertionSort, selectionSort, quickSort };\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Timer = ({ locale }) => {\r\n  const [time, setTime] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const clock = () => {\r\n      let time = new Date();\r\n\r\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', timeZoneName: 'long' };\r\n\r\n      if (locale === 'en-US') {\r\n        // 미국 동부 표준시로 타임존 세팅.\r\n        options.timeZone = 'America/New_York';\r\n\r\n        const nyDate = time.toLocaleDateString(locale, options);\r\n\r\n        const unixTime = time.getTime();\r\n        let nyTime;\r\n\r\n        if (nyDate.includes('Daylight')) {\r\n          // 서머타임이 적용되는 경우 북미 동부 표준시는 한국 표준시보다 13시간 느리다.\r\n          nyTime = new Date(unixTime - 13 * 60 * 60 * 1000);\r\n        } else {\r\n          // 일반적인 북미 동부 표준시는 한국 표준시보다 14시간 느리다.\r\n          nyTime = new Date(unixTime - 14 * 60 * 60 * 1000);\r\n        }\r\n        console.log(nyTime.toLocaleDateString(locale, options));\r\n        const hours = nyTime.getHours();\r\n        const minutes = nyTime.getMinutes();\r\n        const seconds = nyTime.getSeconds();\r\n\r\n        setTime(`${harold(hours)}:${harold(minutes)}:${harold(seconds)}`);\r\n      } else if (locale === 'ko-KR') {\r\n        const hours = time.getHours();\r\n        const minutes = time.getMinutes();\r\n        const seconds = time.getSeconds();\r\n\r\n        setTime(`${harold(hours)}:${harold(minutes)}:${harold(seconds)}`);\r\n      }\r\n\r\n      setDate(time.toLocaleDateString(locale, options));\r\n\r\n      // TODO : 함수명 바꿀 필요 있음..\r\n      function harold(standIn) {\r\n        if (standIn < 10) {\r\n          standIn = '0' + standIn;\r\n        }\r\n        return standIn;\r\n      }\r\n    };\r\n\r\n    setInterval(clock, 1000);\r\n\r\n    return () => {\r\n      clearInterval(clock);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledTimer>\r\n      <div>{date}</div>\r\n      <div>{time}</div>\r\n    </StyledTimer>\r\n  );\r\n};\r\n\r\nconst StyledTimer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem 0;\r\n  padding: 1rem 0.5rem;\r\n  text-align: center;\r\n  border: 2px dotted #03e9f4;\r\n  color: white;\r\n  font-size: 2rem;\r\n\r\n  & > div:first-child {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\n\r\nTimer.propTypes = {\r\n  locale: PropTypes.oneOf(['ko-KR', 'en-US']),\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport { bubbleSort, selectionSort, insertionSort, quickSort } from 'utils/sorting';\r\nimport Timer from 'components/Timer';\r\n\r\nconst sortTypeToMethod = {\r\n  bubble: bubbleSort,\r\n  select: selectionSort,\r\n  insert: insertionSort,\r\n  quick: quickSort,\r\n};\r\n\r\nconst Home = () => {\r\n  const [inputNumbers, setInputNumbers] = useState('');\r\n  const [sortInfo, setSortInfo] = useState({\r\n    type: 'bubble',\r\n    resultAsc: null,\r\n    resultDesc: null,\r\n  });\r\n\r\n  const [calculating, setCalculating] = useState(false);\r\n\r\n  const onChangeInputNumbers = (e) => {\r\n    if (calculating) return;\r\n\r\n    const { value } = e.target;\r\n\r\n    if (!value || value === value.match(/[0-9]+,?/g)?.join('')) {\r\n      setInputNumbers(value);\r\n    }\r\n  };\r\n\r\n  const onChangeSortInfo = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setSortInfo({\r\n      ...sortInfo,\r\n      type: value,\r\n    });\r\n  };\r\n\r\n  const onStartSorting = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (calculating) return;\r\n\r\n    setCalculating(true);\r\n\r\n    let result = inputNumbers;\r\n\r\n    if (inputNumbers[inputNumbers.length - 1] === ',') {\r\n      result = inputNumbers.slice(0, -1);\r\n      setInputNumbers(result);\r\n    }\r\n\r\n    getSortResult(true, result);\r\n  };\r\n\r\n  const getSortResult = (isAsc = true, input) => {\r\n    const data = input.split(',').map((elem) => parseInt(elem));\r\n    const sortMethod = sortTypeToMethod[sortInfo.type];\r\n\r\n    let result;\r\n\r\n    if (sortInfo.type === 'quick') {\r\n      isAsc ? sortMethod(data, (a, b) => a - b) : sortMethod(data, (a, b) => b - a);\r\n      result = data.toString().replaceAll(',', ', ');\r\n    } else {\r\n      result = sortMethod(data, isAsc).toString().replaceAll(',', ', ');\r\n    }\r\n\r\n    if (isAsc) {\r\n      setSortInfo({\r\n        ...sortInfo,\r\n        resultAsc: result,\r\n        resultDesc: null,\r\n      });\r\n    } else {\r\n      setSortInfo({\r\n        ...sortInfo,\r\n        resultDesc: result,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sortInfo.resultAsc) {\r\n      const timer = setTimeout(() => {\r\n        getSortResult(false, inputNumbers);\r\n        setCalculating(false);\r\n      }, 3000);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [sortInfo.resultAsc, calculating]);\r\n\r\n  return (\r\n    <SortingMachineBox>\r\n      <Timer locale='ko-KR' />\r\n      <form onSubmit={onStartSorting}>\r\n        <InputField>\r\n          <input type='text' name='numbers' value={inputNumbers} required autoComplete='off' onChange={onChangeInputNumbers} />\r\n          <label htmlFor='numbers'>숫자 입력</label>\r\n        </InputField>\r\n        <ResultField>\r\n          <h1>결과 (오름차순)</h1>\r\n          <div>{sortInfo.resultAsc}</div>\r\n        </ResultField>\r\n        <ResultField>\r\n          <h1>결과 (내림차순)</h1>\r\n          <div>{calculating ? '계산중...' : sortInfo.resultDesc}</div>\r\n        </ResultField>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <SelectField name='type' value={sortInfo.type} disabled={calculating} onChange={onChangeSortInfo}>\r\n            <option value='bubble'>버블정렬</option>\r\n            <option value='select'>선택정렬</option>\r\n            <option value='insert'>삽입정렬</option>\r\n            <option value='quick'>퀵정렬</option>\r\n          </SelectField>\r\n          <StartButton type='submit'>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            시작\r\n          </StartButton>\r\n        </div>\r\n      </form>\r\n      <Timer locale='en-US' />\r\n    </SortingMachineBox>\r\n  );\r\n};\r\n\r\nconst SortingMachineBox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 520px;\r\n  padding: 40px;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  position: relative;\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    margin-bottom: 30px;\r\n    border: none;\r\n    border-bottom: 1px solid #fff;\r\n    outline: none;\r\n    background: transparent;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n  }\r\n\r\n  input:valid ~ label,\r\n  input:focus ~ label {\r\n    top: -20px;\r\n    left: 0;\r\n    color: #03e9f4;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst ResultField = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n  color: #fff;\r\n  & h1 {\r\n    color: #03e9f4;\r\n  }\r\n  & div {\r\n    padding: 10px 0;\r\n  }\r\n`;\r\n\r\nconst SelectField = styled.select`\r\n  outline: none;\r\n  border: 1px solid #03e9f4;\r\n  border-radius: 8px;\r\n  background: transparent;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  width: 180px;\r\n  height: 40px;\r\n  text-align-last: center;\r\n  text-align: center;\r\n  -ms-text-align-last: center;\r\n  -moz-text-align-last: center;\r\n`;\r\n\r\nconst btnAnimation1 = keyframes`\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,100% {\r\n    left: 100%;\r\n  }\r\n`;\r\n\r\nconst btnAnimation2 = keyframes`\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,100% {\r\n    top: 100%;\r\n  }\r\n`;\r\n\r\nconst btnAnimation3 = keyframes`\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,100% {\r\n    right: 100%;\r\n  }\r\n`;\r\n\r\nconst btnAnimation4 = keyframes`\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,100% {\r\n    bottom: 100%;\r\n  }\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  color: #03e9f4;\r\n  font-size: 16px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n  transition: 0.5s;\r\n  letter-spacing: 4px;\r\n  width: 120px;\r\n\r\n  &:hover {\r\n    background: #03e9f4;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\r\n  }\r\n\r\n  & > span {\r\n    position: absolute;\r\n    display: block;\r\n  }\r\n\r\n  & > span:nth-child(1) {\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: linear-gradient(90deg, transparent, #03e9f4);\r\n    animation: ${btnAnimation1} 1s linear infinite;\r\n  }\r\n\r\n  & > span:nth-child(2) {\r\n    top: -100%;\r\n    right: 0;\r\n    width: 2px;\r\n    height: 100%;\r\n    background: linear-gradient(180deg, transparent, #03e9f4);\r\n    animation: ${btnAnimation2} 1s linear infinite;\r\n    animation-delay: 0.25s;\r\n  }\r\n\r\n  & > span:nth-child(3) {\r\n    bottom: 0;\r\n    right: -100%;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: linear-gradient(270deg, transparent, #03e9f4);\r\n    animation: ${btnAnimation3} 1s linear infinite;\r\n    animation-delay: 0.5s;\r\n  }\r\n\r\n  & > span:nth-child(4) {\r\n    bottom: -100%;\r\n    left: 0;\r\n    width: 2px;\r\n    height: 100%;\r\n    background: linear-gradient(360deg, transparent, #03e9f4);\r\n    animation: ${btnAnimation4} 1s linear infinite;\r\n    animation-delay: 0.75s;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from 'pages/Home';\r\n\r\nfunction App() {\r\n  return <Home />;\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    html {\r\n      height: 100%;\r\n    }\r\n    body {\r\n      margin:0;\r\n      padding:0;\r\n      font-family: sans-serif;\r\n      background: rgb(34,193,195);\r\nbackground: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%);\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit\r\n    }\r\n    *{\r\n        box-sizing:border-box\r\n    }\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport App from './App';\r\nimport theme from 'styles/theme';\r\nimport GlobalStyles from 'styles/GlobalStyles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}