{"version":3,"sources":["utils/sorting.js","utils/twoDigitsForTimer.js","styles/theme.js","components/Timer/Timer.js","components/Spinner/Spinner.js","pages/Home/Home.js","App.js","styles/GlobalStyles.js","index.js"],"names":["sort","arr","left","right","compareFn","pivot","i","j","result","isNaN","twoDigitsForTimer","number","theme","colors","primary","second","StyledTimer","styled","div","Timer","locale","useState","time","setTime","date","setDate","useEffect","clock","Date","options","weekday","year","month","day","timeZoneName","nyTime","timeZone","hours","toLocaleDateString","includes","getTime","getHours","minutes","getMinutes","seconds","getSeconds","setInterval","clearInterval","load8","keyframes","StyledSpinner","Spinner","sortTypeToMethod","bubble","array","isAscending","length","swap","select","Index","answer","insert","insertValue","quick","Array","isArray","TypeError","compareFnType","a","b","Title","h1","SortingMachineBox","InputField","ResultField","SelectField","btnAnimation1","btnAnimation2","btnAnimation3","btnAnimation4","StartButton","button","Home","inputNumbers","setInputNumbers","type","resultAsc","resultDesc","sortInfo","setSortInfo","calculating","setCalculating","getSortResult","isAsc","input","data","split","map","elem","parseInt","sortMethod","toString","replaceAll","timer","setTimeout","clearTimeout","onSubmit","e","preventDefault","slice","name","value","required","autoComplete","onChange","target","match","join","htmlFor","style","display","justifyContent","alignItems","disabled","App","GlobalStyles","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d22241fc.chunk.js","sourcesContent":["/**\r\n * @param {*} array : input 배열\r\n * @param {*} isAscending : 정렬 순서 조건. true면 오름차면, false면 내림차순.\r\n * @returns : 정렬된 배열\r\n */\r\nfunction bubbleSort(array, isAscending) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    let swap = false;\r\n    for (let j = 0; j < array.length - i; j++) {\r\n      const sortingCondition = isAscending ? array[j] > array[j + 1] : array[j] < array[j + 1];\r\n\r\n      if (sortingCondition) {\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n        swap = true;\r\n      }\r\n    }\r\n    if (swap == false) {\r\n      break;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * @param {*} array : input 배열\r\n * @param {*} isAscending : 정렬 순서 조건. true면 오름차면, false면 내림차순.\r\n * @returns : 정렬된 배열\r\n */\r\nfunction selectionSort(arr, isAscending) {\r\n  let Index;\r\n  let answer = arr;\r\n\r\n  // 제일 마지막 인덱스가 Index가 될 때는 더이상 비교할 요소들이 없기이 반복 조건을 배열 길이 - 1로 세팅.\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    Index = i;\r\n\r\n    for (let j = i + 1; j < arr.length; j++) {\r\n      const sortingCondition = isAscending ? arr[Index] > arr[j] : arr[Index] < arr[j];\r\n      if (sortingCondition) {\r\n        Index = j;\r\n      }\r\n    }\r\n    // console.log(`maxNumIndex : ${maxNumIndex}`);\r\n    // 순회를 시작하는 인덱스의 값이 최소값이 아닌 경우, 그러니까 실제로 스왑이 필요한 경우에만 스왑 실행\r\n    if (Index > i) {\r\n      [arr[i], arr[Index]] = [arr[Index], arr[i]];\r\n    }\r\n\r\n    // console.log(arr);\r\n  }\r\n\r\n  return answer;\r\n}\r\n\r\n/**\r\n * @param {*} array : input 배열\r\n * @param {*} isAscending : 정렬 순서 조건. true면 오름차면, false면 내림차순.\r\n * @returns : 정렬된 배열\r\n */\r\nfunction insertionSort(array, isAscending) {\r\n  let answer = array;\r\n\r\n  for (let i = 1; i < array.length; i++) {\r\n    let insertValue = array[i];\r\n\r\n    for (let j = i - 1; j > -1; j--) {\r\n      // 내림차순으로 변경시 아래 조건문 부등호만 바꾸면 된다.\r\n      const sortingCondition = isAscending ? insertValue < array[j] : insertValue > array[j];\r\n\r\n      if (sortingCondition) {\r\n        array[j + 1] = array[j];\r\n      } else {\r\n        array[j + 1] = insertValue;\r\n        break;\r\n      }\r\n\r\n      // 첫번째 인덱스까지 비교했는데도 삽입할 곳이 없다면 첫번째 인덱스 값을 insertValue로 대체\r\n      if (j === 0) {\r\n        array[j] = insertValue;\r\n      }\r\n      // console.log(arr);\r\n    }\r\n\r\n    // console.log(array);\r\n    // console.log(`패스스루 : ${i} 번째`);\r\n  }\r\n\r\n  return answer;\r\n}\r\n\r\nfunction quickSort(arr, compareFn) {\r\n  if (!Array.isArray(arr)) {\r\n    throw TypeError('The first parameter must be an array');\r\n  }\r\n\r\n  const compareFnType = typeof compareFn;\r\n\r\n  if (compareFnType !== 'function' && compareFnType !== 'undefined') {\r\n    throw TypeError('The comparison function must be either a function or undefined');\r\n  }\r\n\r\n  if (compareFnType === 'undefined') {\r\n    compareFn = (a, b) => {\r\n      if (a < b) return -1;\r\n      if (a === b) return 0;\r\n      if (a > b) return 1;\r\n    };\r\n  }\r\n\r\n  if (arr.length < 2) return;\r\n\r\n  sort(arr, 0, arr.length - 1, compareFn);\r\n}\r\n\r\nfunction sort(arr, left, right, compareFn) {\r\n  if (left >= right) return;\r\n\r\n  const pivot = left;\r\n  let i = pivot + 1;\r\n  let j = right;\r\n\r\n  while (i <= j) {\r\n    while (i <= right) {\r\n      const result = compareFn(arr[i], arr[pivot]);\r\n\r\n      if (isNaN(result) || typeof result !== 'number') return;\r\n      if (result > 0) break;\r\n\r\n      i++;\r\n    }\r\n\r\n    while (j > left) {\r\n      const result = compareFn(arr[j], arr[pivot]);\r\n\r\n      if (isNaN(result) || typeof result !== 'number') return;\r\n      if (result <= 0) break;\r\n\r\n      j--;\r\n    }\r\n\r\n    if (i >= j) break;\r\n\r\n    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n  }\r\n\r\n  [arr[j], arr[pivot]] = [arr[pivot], arr[j]];\r\n\r\n  sort(arr, left, j - 1, compareFn);\r\n  sort(arr, j + 1, right, compareFn);\r\n}\r\n\r\nexport { bubbleSort, insertionSort, selectionSort, quickSort };\r\n","function twoDigitsForTimer(number) {\r\n  if (number < 10) {\r\n    number = '0' + number;\r\n  }\r\n  return number;\r\n}\r\n\r\nexport default twoDigitsForTimer;","const colors = {\r\n  primary: '#03e9f4',\r\n  second: '#ffffff'\r\n};\r\n\r\nconst theme = {\r\n  colors,\r\n};\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport twoDigitsForTimer from 'utils/twoDigitsForTimer';\r\nimport theme from 'styles/theme';\r\n\r\nconst Timer = ({ locale }) => {\r\n  const [time, setTime] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const clock = () => {\r\n      let time = new Date();\r\n\r\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', timeZoneName: 'long' };\r\n\r\n      if (locale === 'en-US') {\r\n        // 미국 동부 표준시(뉴욕)로 타임존 세팅.\r\n        options.timeZone = 'America/New_York';\r\n\r\n        const nyDate = time.toLocaleDateString(locale, options);\r\n\r\n        let nyTime;\r\n\r\n        if (nyDate.includes('Daylight')) {\r\n          // 서머타임이 적용되는 경우 북미 동부 표준시는 한국 표준시보다 13시간 느리다.\r\n          nyTime = new Date(time.getTime() - 13 * 60 * 60 * 1000);\r\n        } else {\r\n          // 일반적인 북미 동부 표준시는 한국 표준시보다 14시간 느리다.\r\n          nyTime = new Date(time.getTime() - 14 * 60 * 60 * 1000);\r\n        }\r\n\r\n        const hours = nyTime.getHours();\r\n        const minutes = nyTime.getMinutes();\r\n        const seconds = nyTime.getSeconds();\r\n\r\n        setTime(`${twoDigitsForTimer(hours)}:${twoDigitsForTimer(minutes)}:${twoDigitsForTimer(seconds)}`);\r\n      } else if (locale === 'ko-KR') {\r\n        const hours = time.getHours();\r\n        const minutes = time.getMinutes();\r\n        const seconds = time.getSeconds();\r\n\r\n        setTime(`${twoDigitsForTimer(hours)}:${twoDigitsForTimer(minutes)}:${twoDigitsForTimer(seconds)}`);\r\n      }\r\n\r\n      setDate(time.toLocaleDateString(locale, options));\r\n    };\r\n\r\n    setInterval(clock, 1000);\r\n\r\n    return () => {\r\n      clearInterval(clock);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledTimer>\r\n      <div>{date}</div>\r\n      <div>{time}</div>\r\n    </StyledTimer>\r\n  );\r\n};\r\n\r\nconst StyledTimer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem 0;\r\n  padding: 1rem 0.5rem;\r\n  text-align: center;\r\n  border: 2px dotted ${theme.colors.primary};\r\n  color: white;\r\n  font-size: 2rem;\r\n\r\n  & > div:first-child {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\n\r\nTimer.propTypes = {\r\n  locale: PropTypes.oneOf(['ko-KR', 'en-US']),\r\n};\r\n\r\nexport default Timer;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport theme from 'styles/theme';\r\n\r\nconst Spinner = () => {\r\n  return <StyledSpinner />;\r\n};\r\n\r\nconst load8 = keyframes`\r\n  0% {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst StyledSpinner = styled.div`\r\n  &,\r\n  &::after {\r\n    border-radius: 50%;\r\n    width: 19px;\r\n    height: 19px;\r\n  }\r\n\r\n  margin: 0 auto;\r\n  font-size: 16px;\r\n  position: relative;\r\n  text-indent: -9999em;\r\n  border-top: 2px solid rgba(255, 255, 255, 0.8);\r\n  border-right: 2px solid rgba(255, 255, 255, 0.8);\r\n  border-bottom: 2px solid rgba(255, 255, 255, 0.8);\r\n  border-left: 2px solid ${theme.colors.primary};\r\n  -webkit-transform: translateZ(0);\r\n  -ms-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  -webkit-animation: ${load8} 1.1s infinite linear;\r\n  animation: ${load8} 1.1s infinite linear;\r\n`;\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport { bubbleSort, selectionSort, insertionSort, quickSort } from 'utils/sorting';\r\nimport Timer from 'components/Timer';\r\nimport Spinner from 'components/Spinner';\r\nimport theme from 'styles/theme';\r\n\r\nconst sortTypeToMethod = {\r\n  bubble: bubbleSort,\r\n  select: selectionSort,\r\n  insert: insertionSort,\r\n  quick: quickSort,\r\n};\r\n\r\nconst Home = () => {\r\n  const [inputNumbers, setInputNumbers] = useState('');\r\n  const [sortInfo, setSortInfo] = useState({\r\n    type: 'bubble',\r\n    resultAsc: null,\r\n    resultDesc: null,\r\n  });\r\n\r\n  const [calculating, setCalculating] = useState(false);\r\n\r\n  const onChangeInputNumbers = (e) => {\r\n    if (calculating) return;\r\n\r\n    const { value } = e.target;\r\n\r\n    if (!value || value === value.match(/[0-9]+,?/g)?.join('')) {\r\n      setInputNumbers(value);\r\n    }\r\n  };\r\n\r\n  const onChangeSortInfo = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setSortInfo({\r\n      ...sortInfo,\r\n      type: value,\r\n    });\r\n  };\r\n\r\n  const onStartSorting = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (calculating) return;\r\n\r\n    setCalculating(true);\r\n\r\n    let result = inputNumbers;\r\n\r\n    if (inputNumbers[inputNumbers.length - 1] === ',') {\r\n      result = inputNumbers.slice(0, -1);\r\n      setInputNumbers(result);\r\n    }\r\n\r\n    getSortResult(true, result);\r\n  };\r\n\r\n  const getSortResult = (isAsc = true, input) => {\r\n    const data = input.split(',').map((elem) => parseInt(elem));\r\n    const sortMethod = sortTypeToMethod[sortInfo.type];\r\n\r\n    let result;\r\n\r\n    if (sortInfo.type === 'quick') {\r\n      isAsc ? sortMethod(data, (a, b) => a - b) : sortMethod(data, (a, b) => b - a);\r\n      result = data.toString().replaceAll(',', ', ');\r\n    } else {\r\n      result = sortMethod(data, isAsc).toString().replaceAll(',', ', ');\r\n    }\r\n\r\n    if (isAsc) {\r\n      setSortInfo({\r\n        ...sortInfo,\r\n        resultAsc: result,\r\n        resultDesc: null,\r\n      });\r\n    } else {\r\n      setSortInfo({\r\n        ...sortInfo,\r\n        resultDesc: result,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sortInfo.resultAsc) {\r\n      const timer = setTimeout(() => {\r\n        getSortResult(false, inputNumbers);\r\n        setCalculating(false);\r\n      }, 3000);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [sortInfo.resultAsc, calculating]);\r\n\r\n  return (\r\n    <SortingMachineBox>\r\n      <Title>Sorting Machine</Title>\r\n      <Timer locale='ko-KR' />\r\n      <form onSubmit={onStartSorting}>\r\n        <InputField>\r\n          <input type='text' name='numbers' value={inputNumbers} required autoComplete='off' onChange={onChangeInputNumbers} />\r\n          <label htmlFor='numbers'>숫자 입력</label>\r\n        </InputField>\r\n        <ResultField>\r\n          <h1>결과 (오름차순)</h1>\r\n          <div>{sortInfo.resultAsc}</div>\r\n        </ResultField>\r\n        <ResultField>\r\n          <h1>결과 (내림차순)</h1>\r\n          <div>{calculating ? '계산중...' : sortInfo.resultDesc}</div>\r\n        </ResultField>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <SelectField name='type' value={sortInfo.type} disabled={calculating} onChange={onChangeSortInfo}>\r\n            <option value='bubble'>버블정렬</option>\r\n            <option value='select'>선택정렬</option>\r\n            <option value='insert'>삽입정렬</option>\r\n            <option value='quick'>퀵정렬</option>\r\n          </SelectField>\r\n          <StartButton type='submit'>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            {calculating ? <Spinner /> : '시작'}\r\n          </StartButton>\r\n        </div>\r\n      </form>\r\n      <Timer locale='en-US' />\r\n    </SortingMachineBox>\r\n  );\r\n};\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  color: ${theme.colors.second};\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst SortingMachineBox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 520px;\r\n  padding: 40px;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  position: relative;\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: ${theme.colors.second};\r\n    margin-bottom: 30px;\r\n    border: none;\r\n    border-bottom: 1px solid ${theme.colors.second};\r\n    outline: none;\r\n    background: transparent;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: ${theme.colors.second};\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n  }\r\n\r\n  input:valid ~ label,\r\n  input:focus ~ label {\r\n    top: -20px;\r\n    left: 0;\r\n    color: ${theme.colors.primary};\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst ResultField = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n  color: ${theme.colors.second};\r\n  & h1 {\r\n    color: ${theme.colors.primary};\r\n  }\r\n  & div {\r\n    padding: 10px 0;\r\n  }\r\n`;\r\n\r\nconst SelectField = styled.select`\r\n  outline: none;\r\n  border: 1px solid ${theme.colors.primary};\r\n  border-radius: 8px;\r\n  background: transparent;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  width: 180px;\r\n  height: 40px;\r\n  text-align-last: center;\r\n  text-align: center;\r\n  -ms-text-align-last: center;\r\n  -moz-text-align-last: center;\r\n`;\r\n\r\nconst btnAnimation1 = keyframes`\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,100% {\r\n    left: 100%;\r\n  }\r\n`;\r\n\r\nconst btnAnimation2 = keyframes`\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,100% {\r\n    top: 100%;\r\n  }\r\n`;\r\n\r\nconst btnAnimation3 = keyframes`\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,100% {\r\n    right: 100%;\r\n  }\r\n`;\r\n\r\nconst btnAnimation4 = keyframes`\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,100% {\r\n    bottom: 100%;\r\n  }\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  color: ${theme.colors.primary};\r\n  font-size: 16px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n  transition: 0.5s;\r\n  letter-spacing: 4px;\r\n  width: 120px;\r\n\r\n  &:hover {\r\n    background: ${theme.colors.primary};\r\n    color: ${theme.colors.second};\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 5px ${theme.colors.primary}, 0 0 25px ${theme.colors.primary}, 0 0 50px ${theme.colors.primary}, 0 0 100px ${theme.colors.primary};\r\n  }\r\n\r\n  & > span {\r\n    position: absolute;\r\n    display: block;\r\n  }\r\n\r\n  & > span:nth-child(1) {\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: linear-gradient(90deg, transparent, ${theme.colors.primary});\r\n    animation: ${btnAnimation1} 1s linear infinite;\r\n  }\r\n\r\n  & > span:nth-child(2) {\r\n    top: -100%;\r\n    right: 0;\r\n    width: 2px;\r\n    height: 100%;\r\n    background: linear-gradient(180deg, transparent, ${theme.colors.primary});\r\n    animation: ${btnAnimation2} 1s linear infinite;\r\n    animation-delay: 0.25s;\r\n  }\r\n\r\n  & > span:nth-child(3) {\r\n    bottom: 0;\r\n    right: -100%;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: linear-gradient(270deg, transparent, ${theme.colors.primary});\r\n    animation: ${btnAnimation3} 1s linear infinite;\r\n    animation-delay: 0.5s;\r\n  }\r\n\r\n  & > span:nth-child(4) {\r\n    bottom: -100%;\r\n    left: 0;\r\n    width: 2px;\r\n    height: 100%;\r\n    background: linear-gradient(360deg, transparent, ${theme.colors.primary});\r\n    animation: ${btnAnimation4} 1s linear infinite;\r\n    animation-delay: 0.75s;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from 'pages/Home';\r\n\r\nfunction App() {\r\n  return <Home />;\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    html {\r\n      height: 100%;\r\n    }\r\n    body {\r\n      margin:0;\r\n      padding:0;\r\n      font-family: sans-serif;\r\n      background: rgb(34,193,195);\r\nbackground: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%);\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit\r\n    }\r\n    *{\r\n        box-sizing:border-box\r\n    }\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport App from './App';\r\nimport theme from 'styles/theme';\r\nimport GlobalStyles from 'styles/GlobalStyles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}